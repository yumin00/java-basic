package src;

public class Class {

    public static void main(String[] args) {
        // 1. 변수 선언
        Student student1;

        // 2. 객체 생성
        // 메모리에 객체/인스턴스가 할당됨.

        student1 = new Student(); // 메모리 할당 => 설계도를 바탕으로 메모리에 공간을 확보하고 실제로 사용하는 것을 객체/인스턴스 라고 한다.
        // 여기에서는 student1이 객체/인스턴스이다.

        // 3. 참조값 보관
        // 2번으로 객체를 생성하면 이 객체에 접근할 수 있는 참조값(주소)(x001)을 반환한다.
        // 1번을 통해 선언한 변수 Student student1에 객체의 참조값을 보관한다.
        // 즉, Student student1은 실제 Student 객체의 참조값을 가지고 있다.

        // 결론: 변수 선언 -> 객체 생성 -> 메모리에 객체 할당 -> 이 객체의 메모리 주소를 변수에 할당 -> 변수를 통해 해당 객체에 접근할 수 있음.

        // 참조값을 변수에 저장해야하는 이유
        // new Student()는 객체를 만들고 참조값을 반환하는 역할인데, 이 객체에 접근할 방법이 필요함.
        // 변수에 참조값을 저장함으로써 참조값을 통해 실제 메모리에 존재하는 객체에 접근할 수 있다.


        // 변수를 출력해보면서 참조값을 출력한다!
        System.out.println(student1);

        student1.name = "학생";
        student1.age = 17;
        student1.score = 100;


        // 객체
        // 객체란, 클래스에서 정의한 속성과 기능을 가진 실체.

        // 인스턴스
        // 특정 클래스로부터 생성된 객체
        // student1라는 객체는 Student 클래스의 인스턴스

        // 객체 vs 인스턴스
        // student1은 객체이지만, 이 객체가 Student 클래스로부터 생성되었다는 점을 명확히 하기 위해서 student1을 Student의 인스턴스라고 부른다.
        // 보통은 객체와 인스턴스를 구분하지 않고 사용한다.
    }
}
